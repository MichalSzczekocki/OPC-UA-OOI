<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UAOOI.Common.Infrastructure.Loc</name>
    </assembly>
    <members>
        <member name="T:UAOOI.Common.Infrastructure.Diagnostic.ITraceSource">
            <summary>
            Interface ITraceSource - defines trace source.
            </summary>
        </member>
        <member name="M:UAOOI.Common.Infrastructure.Diagnostic.ITraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>
            Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners"/> collection using the specified <paramref name="eventType"/>, 
            event identifier <paramref name="id"/>, and trace <paramref name="data"/>.
            </summary>
            <param name="eventType">One of the enumeration values that specifies the event type of the trace data.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">The trace data.</param>
            <exception cref="T:System.ObjectDisposedException">
            An attempt was made to trace an event during finalization.
            </exception>
        </member>
        <member name="T:UAOOI.Common.Infrastructure.Diagnostic.TraceSourceBase">
            <summary>
            Class TraceSourceBase - default implementation of the <see cref="T:UAOOI.Common.Infrastructure.Diagnostic.ITraceSource"/>
            </summary>
        </member>
        <member name="M:UAOOI.Common.Infrastructure.Diagnostic.TraceSourceBase.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>
            Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified <paramref name="eventType" />,
            event identifier <paramref name="id" />, and trace <paramref name="data" />.
            </summary>
            <param name="eventType">One of the enumeration values that specifies the event type of the trace data.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">The trace data.</param>
        </member>
        <member name="P:UAOOI.Common.Infrastructure.Diagnostic.TraceSourceBase.TraceSource">
            <summary>
            Gets the trace source instance.
            </summary>
            <value>The trace source instance of type <see cref="P:UAOOI.Common.Infrastructure.Diagnostic.TraceSourceBase.TraceSource"/>.</value>
        </member>
        <member name="T:UAOOI.Common.Infrastructure.Serializers.IStylesheetNameProvider">
            <summary>
            Represents XML file style sheet name provider
            </summary>
        </member>
        <member name="P:UAOOI.Common.Infrastructure.Serializers.IStylesheetNameProvider.StylesheetName">
            <summary>
            The style sheet name
            </summary>
        </member>
        <member name="T:UAOOI.Common.Infrastructure.Serializers.XmlFile">
            <summary>
            Provides static methods for serialization objects into XML documents and writing the XML document to a file.
            </summary>
        </member>
        <member name="M:UAOOI.Common.Infrastructure.Serializers.XmlFile.WriteXmlFile``1(``0,System.String,System.IO.FileMode,System.String)">
            <summary>
            Serializes the specified <paramref name="dataObject"/> and writes the XML document to a file.
            </summary>
            <typeparam name="type">The type of the root object to be serialized and saved in the file.</typeparam>
            <param name="dataObject">The object containing working data to be serialized and saved in the file.</param>
            <param name="path">A relative or absolute path for the file containing the serialized object.</param>
            <param name="mode">Specifies how the operating system should open a file <see cref="T:System.IO.FileMode"/>.</param>
            <param name="stylesheetName">Name of the stylesheet document.</param>
            <exception cref="T:System.ArgumentNullException">
            path
            or
            dataObject
            or
            stylesheetName
            </exception>
        </member>
        <member name="M:UAOOI.Common.Infrastructure.Serializers.XmlFile.WriteXmlFile``1(``0,System.String,System.IO.FileMode)">
            <summary>
            Serializes the specified <paramref name="dataObject"/> and writes the XML document to a file.
            </summary>
            <typeparam name="type">The type of the object to be serialized and saved in the file.</typeparam>
            <param name="dataObject">The object containing working data to be serialized and saved in the file.</param>
            <param name="path">A relative or absolute path for the file containing the serialized object.</param>
            <param name="mode">Specifies how the operating system should open a file.</param>
        </member>
        <member name="M:UAOOI.Common.Infrastructure.Serializers.XmlFile.ReadXmlFile``1(System.String)">
            <summary>
            Reads an XML document from the file <paramref name="path"/> and deserializes its content to returned object.
            </summary>
            <typeparam name="type">The type of the object to be deserialized.</typeparam>
            <param name="path">A relative or absolute path for the file containing the serialized object.</param>
            <returns>An object containing working data retrieved from an XML file.</returns>
            <exception cref="T:System.ArgumentNullException"> path is null or empty</exception>
        </member>
        <member name="M:UAOOI.Common.Infrastructure.Serializers.XmlFile.ReadXmlFile``1(System.IO.Stream)">
            <summary>
            Reads an XML document from the <paramref name="reader"/> and deserializes its content to returned object.
            </summary>
            <typeparam name="type">The type of the object to be deserialized.</typeparam>
            <param name="reader">The source of the stream to be deserialized.</param>
            <returns>An object of type <typeparamref name="type"/> containing working data retrieved from an XML stream..</returns>
        </member>
    </members>
</doc>
